name: build-wheel

on:
  workflow_dispatch:
  pull_request:

jobs:
  # build_wheels:
  #   name: Build wheels on ${{ matrix.os }}
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [macos-latest, windows-latest]

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Set up Go
  #       uses: actions/setup-go@v3
  #       with:
  #         go-version: "1.20"

  #     # Used to host cibuildwheel
  #     - uses: actions/setup-python@v3

  #     - name: build application
  #       working-directory: ./python-client
  #       run: make copy-service-source-for-sdist

  #     - name: Install cibuildwheel
  #       run: python -m pip install cibuildwheel

  #     - name: Build wheels
  #       working-directory: ./python-client
  #       run: python -m cibuildwheel --output-dir wheels
  #       env: 
  #         CIBW_ARCHS_MACOS: "x86_64 arm64"
  #         CIBW_BEFORE_ALL_LINUX: bash goinstall.sh && source /root/.bashrc
  #         # CIBW_BEFORE_ALL_LINUX: curl -O -L "https://golang.org/dl/go1.20.8.linux-amd64.tar.gz" && tar -xf go1.20.8.linux-amd64.tar.gz && chmod 777 go && ln -s $HOME/go /usr/local/bin/go && echo "succesfully downloaded" && source $HOME/.bashrc
  #       # to supply options, put them in 'env', like:
  #       # env:
  #       #   CIBW_ENVIRONMENT: ARCHITECTURE="${{ matrix.architecture }}"
      
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: wheels-test-artifact
  #         path: ./python-client/wheels/*.whl
  #         retention-days: 15

  build_wheels_linux:
    name: Build wheels on ubuntu-latest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
        architecture: ['aarch64', 'ppc64le', 's390x']
    steps:
      - uses: actions/checkout@v4

      - name: build application
        working-directory: ./python-client
        run: make copy-service-source-for-sdist

      - uses: actions/setup-python@v3 
        with:
          python-version: ${{ matrix.python-version }}
      
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        with:
          arch: ${{ matrix.architecture }}
          distro: ubuntu-latest
          run: cd python-client && bash build-linux.sh
      # - name: run generate-linx-wheel
      #   run: cd python-client && bash build-linux.sh
      #   env:
      #     GO_ARCH: ${{ matrix.architecture }}
      - uses: actions/upload-artifact@v3
        with:
          name: wheels-test-artifact
          path: ./python-client/dist/*.whl
          retention-days: 15




