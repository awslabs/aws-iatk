name: build-wheel

on:
  workflow_dispatch:
  pull_request:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        ARCHITECTURE: [amd64]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.20"

      # Used to host cibuildwheel
      - uses: actions/setup-python@v3

      - name: build application
        working-directory: ./python-client
        run: make copy-service-source-for-sdist

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        working-directory: ./python-client
        run: python -m cibuildwheel --output-dir wheels
        env: 
          CIBW_BEFORE_ALL_LINUX: curl -O -L "https://golang.org/dl/go1.21.1.linux-amd64.tar.gz" && tar -C /usr/local -xzf go1.21.1.linux-amd64.tar.gz && export PATH=$PATH:/usr/local/go/bin && go version && export GOARCH=${{matrix.ARCHITECTURE}} && env GOOS=linux GOARCH=${{matrix.ARCHITECTURE}} go build -C ./src/zion_src -o ../zion_service/ ./cmd/zion
        # to supply options, put them in 'env', like:
        # env:
        #   CIBW_ENVIRONMENT: ARCHITECTURE="${{ matrix.architecture }}"
      
      - uses: actions/upload-artifact@v3
        with:
          name: wheels-test-artifact
          path: ./python-client/wheels/*.whl
          retention-days: 15





