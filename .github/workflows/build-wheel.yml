name: build-wheel

on:
  workflow_dispatch:
  pull_request:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        LINUX_ARCHITECTURE: [amd64]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.20"

      # Used to host cibuildwheel
      - uses: actions/setup-python@v3

      - name: build application
        working-directory: ./python-client
        run: make copy-service-source-for-sdist

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        working-directory: ./python-client
        run: python -m cibuildwheel --output-dir wheels
        env: 
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_ARCHS_WINDOWS: "AMD64 ARM64"
          CIBW_SKIP: cp37-* *-musllinux*
          CIBW_ENVIRONMENT_LINUX: GOARCH="${{ matrix.LINUX_ARCHITECTURE }}"
          CIBW_ARCHS_LINUX: "x86_64"
          CIBW_BEFORE_ALL_LINUX: export LINUX_ARCHITECTURE="${{ matrix.LINUX_ARCHITECTURE }}" && echo $LINUX_ARCHITECTURE && make install-go-build-binary
      
      - uses: actions/upload-artifact@v3
        with:
          name: wheels-test-artifact
          path: ./python-client/wheels/*.whl
          retention-days: 15






