name: release

on:
  pull_request:
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout
jobs:
#   build_wheels:
#     name: Build wheels on ${{ matrix.os }}
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         os: [macos-latest]

#     steps:
#         - uses: actions/checkout@v4

#         - name: Set up Go
#           uses: actions/setup-go@v3
#           with:
#             go-version: "1.20"

#         # Used to host cibuildwheel
#         - uses: actions/setup-python@v3

#         - name: copy go source codebase
#           working-directory: ./python-client
#           run: make copy-service-source-for-sdist

#         - name: Install cibuildwheel
#           run: python -m pip install cibuildwheel

#         - name: Build wheels
#           working-directory: ./python-client
#           run: python -m cibuildwheel --output-dir wheels
#           env: 
#             CIBW_ARCHS_MACOS: "x86_64"
#             CIBW_ARCHS_WINDOWS: "AMD64 ARM64"
        
#         - uses: actions/upload-artifact@v3
#           with:
#             name: wheels-test-artifact
#             path: ./python-client/wheels/*.whl
#             retention-days: 15

  check_version_bump:
    name: check version on macos-latest
    runs-on: macos-latest
    # needs: build_wheels
    steps:
      - name: checkout develop branch
        uses: actions/checkout@v4
        with:
            ref: develop
      - id: version-develop
        name: print version
        run: echo "VERSION_DEVELOP=$(awk '/_version =/ {print $3}' python-client/src/zion/version.py)" >> "$GITHUB_ENV"

      - name: checkout source branch
        uses: actions/checkout@v4

      - id: version-source
        name: print version
        run: echo "VERSION_SOURCE=$(awk '/_version =/ {print $3}' python-client/src/zion/version.py)" >> "$GITHUB_ENV"
          

      - name: Check if versions are the same
        run: 
            if [ $VERSION_SOURCE = $VERSION_DEVELOP ]; then 
                  echo "No version change, exiting!";
                  exit 1;
                else
                  echo Versions are different;
                  exit 0;
                fi
    
  release:
    name: release on macos-latest
    runs-on: macos-latest
    needs: check_version_bump
    steps:
      - uses: actions/setup-python@v3

      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
                pip install setuptools wheel twine awscli
      - name: Configure AWS Credentials 1
        uses: aws-actions/configure-aws-credentials@v4
        with:
            role-to-assume: arn:aws:iam::461630630816:role/GithubExecutionRole
            role-session-name: CiReleaseTest
            aws-region: us-east-1

      - name: Upload CodeArtifact
        run: 
            |      
            export TWINE_REPOSITORY_URL=`aws codeartifact get-repository-endpoint --domain aws --domain-owner 461630630816 --repository zion-wheels-jysheng --region us-east-1 --format pypi --query repositoryEndpoint --output text`
            export TWINE_PASSWORD=`aws codeartifact get-authorization-token --domain aws --domain-owner 484558533428 --region us-east-1 --query authorizationToken --output text`
            export TWINE_USERNAME=aws

            python -m twine upload --verbose ./python-client/wheels/*.whl      

    #   - name: Upload PyPi
    #     run: twine upload dist/*
    
      
      
