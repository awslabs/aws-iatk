name: "Quality Check"

on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
        description: "the ref (branch, commit sha, or tag) to run tests against"
    secrets:
      CI_IAM_ROLE_ARN:
        required: true

env:
  GO_VERSION: "1.20"

jobs:
  rpc-unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1
        with:
          ref: ${{ inputs.ref }}

      - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version: ${{ env.GO_VERSION }}
      
      - name: Install Mockery
        run: go install github.com/vektra/mockery/v2@v2.30.1

      - name: Run tests
        run: make test

  rpc-static-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1
        with:
          ref: ${{ inputs.ref }}

      - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version: ${{ env.GO_VERSION }}
      
      - name: Install Mockery
        run: go install github.com/vektra/mockery/v2@v2.30.1

      - name: Generate Mocks
        run: make generate-mocks

      - uses: golangci/golangci-lint-action@3a919529898de77ec3da873e3063ca4b10e7f5cc # v3.7.0
        with:
          version: v1.51.2

  integration-tests:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      AWS_REGION: "us-east-1"
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1
        with:
          ref: ${{ inputs.ref }}

      - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version: ${{ env.GO_VERSION }}

      - uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4.7.1
        with:
          python-version: "3.8"

      - uses: aws-actions/configure-aws-credentials@010d0da01d0b5a38af31e9c3470dbfdabdecca3a # v4.0.1
        with:
          role-to-assume: ${{ secrets.CI_IAM_ROLE_ARN }}
          role-session-name: CiIntegTests
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Run integration tests
        run: make integ-test

      - name: Setup Python Client with dev dependencies
        working-directory: "python-client"
        run: |
          make copy-service-source-for-sdist
          make init

      - name: Run Python Client end-to-end tests
        working-directory: "python-client"
        run: |
          make integ-test
          
  python-client-build-test:
    name: build-python / x86_64 / ${{ matrix.os }} / Python${{ matrix.python }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        python:
          - "3.8"
          - "3.9"
          - "3.11"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1
        with:
          ref: ${{ inputs.ref }}

      - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version: ${{ env.GO_VERSION }}

      - uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4.7.1
        with:
          python-version: ${{ matrix.python }}

      - name: Setup Python Client without dev dependencies
        working-directory: "python-client"
        run: |
          make copy-service-source-for-sdist
          make build-client

      - name: Test
        shell: bash
        run: |
          CTK_VERSION=$(python -c "import pkg_resources;print(pkg_resources.get_distribution('aws_ctk').version)")
          [ -f ./python-client/dist/ctk-${CTK_VERSION}.tar.gz ]
          python -c "import aws_ctk; from aws_ctk import AWSCtk; z = AWSCtk()"
          
  python-client-unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1
        with:
          ref: ${{ inputs.ref }}

      - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version: ${{ env.GO_VERSION }}

      - uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4.7.1
        with:
          python-version: "3.8"

      - name: Setup Python Client with dev dependencies
        working-directory: "python-client"
        run: |
          make copy-service-source-for-sdist
          make init
      
      - name: Run unit test
        working-directory: "python-client"
        run: |
          make unit-test

  python-client-contract-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1
        with:
          ref: ${{ inputs.ref }}

      - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version: ${{ env.GO_VERSION }}

      - uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4.7.1
        with:
          python-version: "3.10" # min Python version to run the contract test

      - name: Setup Python Client with dev dependencies
        working-directory: "python-client"
        run: |
          make copy-service-source-for-sdist
          make init
      
      - name: Generate RPC specs
        run: |
          rm -f schema/rpc-specs.json
          make generate-rpc-spec

      - name: Run contract test
        working-directory: "python-client"
        run: |
          make contract-test
