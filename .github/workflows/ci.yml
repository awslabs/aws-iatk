name: ci

on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize
  merge_group:
    types: [checks_requested]
    branches:
      - develop

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    if: github.repository_owner == 'awslabs'
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.20"

      - name: Check out code
        uses: actions/checkout@v2

      - name: Install Mockery
        run: go install github.com/vektra/mockery/v2@v2.30.1

      - name: Run tests
        run: make test

  staticcheck:
    if: github.repository_owner == 'awslabs'
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.20"

      - name: Check out code
        uses: actions/checkout@v2

      - name: Install Mockery
        run: go install github.com/vektra/mockery/v2@v2.30.1

      - name: Generate Mocks
        run: make generate-mocks

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.51.2

  integration_test:
    if: github.repository_owner == 'awslabs'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      AWS_REGION: "us-east-1"
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.20"

      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ vars.CI_IAM_ROLE_ARN }}
          role-session-name: ci
          aws-region: ${{ env.AWS_REGION }}

      - name: Run integration tests
        run: make integ-test
